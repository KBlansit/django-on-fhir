# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-26 03:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.CharField(blank=True, choices=[('home', 'home'), ('work', 'work'), ('temp', 'temp'), ('old', 'old')], max_length=100)),
                ('type', models.CharField(blank=True, choices=[('postal', 'period'), ('physical', 'physical'), ('both', 'both')], max_length=100)),
                ('text', models.TextField()),
                ('city', models.CharField(blank=True, max_length=100)),
                ('district', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postalCode', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorReference', models.CharField(blank=True, max_length=100)),
                ('authorString', models.CharField(blank=True, max_length=100)),
                ('time', models.DateTimeField(blank=True)),
                ('text', models.TextField(max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contentType', models.CharField(blank=True, max_length=100)),
                ('langauge', models.CharField(blank=True, max_length=100)),
                ('data', models.BinaryField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('size', models.PositiveIntegerField(blank=True)),
                ('hash', models.BinaryField(blank=True)),
                ('title', models.CharField(blank=True, max_length=1000)),
                ('creation', models.DateTimeField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CodeableConcept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Coding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.URLField(blank=True)),
                ('version', models.CharField(blank=True, max_length=100)),
                ('code', models.CharField(blank=True, max_length=100)),
                ('display', models.CharField(blank=True, max_length=100)),
                ('userSelected', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ContactPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(blank=True, choices=[('phone', 'phone'), ('fax', 'fax'), ('email', 'email'), ('pager', 'pager'), ('other', 'other')], max_length=100)),
                ('value', models.CharField(blank=True, max_length=100)),
                ('use', models.CharField(blank=True, max_length=100)),
                ('rank', models.PositiveIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='FhirCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FhirString',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HumanName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.CharField(blank=True, max_length=1000)),
                ('text', models.CharField(blank=True, max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.CharField(blank=True, max_length=100)),
                ('system', models.URLField(blank=True)),
                ('value', models.CharField(max_length=100)),
                ('assigner', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True)),
                ('end', models.DateTimeField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(blank=True, decimal_places=5, max_digits=20)),
                ('comparator', models.CharField(blank=True, choices=[('<', 'less than'), ('<=', 'less than or equal to'), ('>=', 'greater than or equal to'), ('>', 'greater than')], max_length=100)),
                ('unit', models.CharField(blank=True, max_length=100)),
                ('system', models.URLField(blank=True)),
                ('code', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Range',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Ratio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='RepeatTiming',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boundsType', models.CharField(blank=True, choices=[('quantity', 'quantity'), ('range', 'range'), ('period', 'period')], max_length=100)),
                ('count', models.IntegerField(blank=True)),
                ('duration', models.DecimalField(blank=True, decimal_places=5, max_digits=20)),
                ('durationMax', models.DecimalField(blank=True, decimal_places=5, max_digits=20)),
                ('durationUnits', models.CharField(blank=True, choices=[('s', 's'), ('min', 'min'), ('h', 'h'), ('d', 'd'), ('wk', 'wk'), ('mo', 'mo'), ('a', 'a')], max_length=100)),
                ('frequency', models.IntegerField(blank=True)),
                ('frequencyMax', models.IntegerField(blank=True)),
                ('period', models.DecimalField(blank=True, decimal_places=5, max_digits=20)),
                ('periodMax', models.DecimalField(blank=True, decimal_places=5, max_digits=20)),
                ('periodUnits', models.CharField(blank=True, choices=[('s', 's'), ('min', 'min'), ('h', 'h'), ('d', 'd'), ('wk', 'wk'), ('mo', 'mo'), ('a', 'a')], max_length=100)),
                ('when', models.CharField(blank=True, max_length=100)),
                ('boundPeriod', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period')),
            ],
        ),
        migrations.CreateModel(
            name='SampledData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DecimalField(decimal_places=5, max_digits=20)),
                ('factor', models.DecimalField(blank=True, decimal_places=5, max_digits=20)),
                ('lowerLimit', models.DecimalField(blank=True, decimal_places=5, max_digits=20)),
                ('upperLimit', models.DecimalField(blank=True, decimal_places=5, max_digits=20)),
                ('dimensions', models.PositiveIntegerField()),
                ('data', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('when', models.DateTimeField()),
                ('whoUri', models.URLField()),
                ('whoReference', models.CharField(max_length=100)),
                ('contentType', models.URLField()),
                ('blob', models.BinaryField()),
            ],
        ),
        migrations.CreateModel(
            name='Timing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.DateTimeField(blank=True)),
                ('code', models.CharField(blank=True, choices=[('QD', 'QD'), ('QOD', 'QOD'), ('Q4D', 'Q4D'), ('Q6D', 'Q6D'), ('BID', 'BID'), ('TID', 'TID'), ('QID', 'QID'), ('AM', 'AM'), ('PM', 'PM')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AddressFhirString',
            fields=[
                ('fhirstring_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.FhirString')),
            ],
            bases=('fhir.fhirstring',),
        ),
        migrations.CreateModel(
            name='CodeableConceptCoding',
            fields=[
                ('fhircode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.FhirCode')),
                ('codeableConcept', models.ManyToManyField(to='fhir.CodeableConcept')),
            ],
            bases=('fhir.fhircode',),
        ),
        migrations.CreateModel(
            name='HumanNameFamily',
            fields=[
                ('fhirstring_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.FhirString')),
            ],
            bases=('fhir.fhirstring',),
        ),
        migrations.CreateModel(
            name='HumanNameGiven',
            fields=[
                ('fhirstring_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.FhirString')),
            ],
            bases=('fhir.fhirstring',),
        ),
        migrations.CreateModel(
            name='HumanNamePrefix',
            fields=[
                ('fhirstring_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.FhirString')),
            ],
            bases=('fhir.fhirstring',),
        ),
        migrations.CreateModel(
            name='HumanNameSuffix',
            fields=[
                ('fhirstring_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.FhirString')),
            ],
            bases=('fhir.fhirstring',),
        ),
        migrations.CreateModel(
            name='Ratiodenominator',
            fields=[
                ('quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Quantity')),
                ('ratio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Ratio')),
            ],
            bases=('fhir.quantity',),
        ),
        migrations.CreateModel(
            name='RatioNumerator',
            fields=[
                ('quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Quantity')),
                ('ratio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Ratio')),
            ],
            bases=('fhir.quantity',),
        ),
        migrations.CreateModel(
            name='SimpleQuantity',
            fields=[
                ('quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Quantity')),
            ],
            bases=('fhir.quantity',),
        ),
        migrations.AddField(
            model_name='repeattiming',
            name='boundQuantity',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Quantity'),
        ),
        migrations.AddField(
            model_name='repeattiming',
            name='boundRange',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Range'),
        ),
        migrations.AddField(
            model_name='repeattiming',
            name='timing',
            field=models.ManyToManyField(to='fhir.Timing'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='period',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.CodeableConcept'),
        ),
        migrations.AddField(
            model_name='humanname',
            name='period',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period'),
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='period',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period'),
        ),
        migrations.AddField(
            model_name='address',
            name='period',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period'),
        ),
        migrations.CreateModel(
            name='RangeSimpleHigh',
            fields=[
                ('simplequantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.SimpleQuantity')),
                ('range', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Range')),
            ],
            bases=('fhir.simplequantity',),
        ),
        migrations.CreateModel(
            name='RangeSimpleLow',
            fields=[
                ('simplequantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.SimpleQuantity')),
                ('range', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Range')),
            ],
            bases=('fhir.simplequantity',),
        ),
        migrations.AddField(
            model_name='sampleddata',
            name='origin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.SimpleQuantity'),
        ),
        migrations.AddField(
            model_name='humannamesuffix',
            name='HumanName',
            field=models.ManyToManyField(to='fhir.HumanName'),
        ),
        migrations.AddField(
            model_name='humannameprefix',
            name='HumanName',
            field=models.ManyToManyField(to='fhir.HumanName'),
        ),
        migrations.AddField(
            model_name='humannamegiven',
            name='HumanName',
            field=models.ManyToManyField(to='fhir.HumanName'),
        ),
        migrations.AddField(
            model_name='humannamefamily',
            name='HumanName',
            field=models.ManyToManyField(to='fhir.HumanName'),
        ),
        migrations.AddField(
            model_name='addressfhirstring',
            name='address',
            field=models.ManyToManyField(to='fhir.Address'),
        ),
    ]
