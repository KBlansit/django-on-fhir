# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-26 19:48
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('fhir', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalBreed',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='AnimalSpecies',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='AvailableTimeDaysOfWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayOfWeek', models.CharField(choices=[('mon', 'mon'), ('tue', 'tue'), ('wed', 'wed'), ('thu', 'thu'), ('fri', 'fri'), ('sat', 'sat'), ('sun', 'sun')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ContactRelationship',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='ContactTelecom',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.ContactPoint')),
            ],
            bases=('fhir.contactpoint',),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('actual', models.BooleanField()),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupCharacteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valueType', models.CharField(choices=[('codeable_concept', 'codeable_concept'), ('boolean', 'boolean'), ('quantity', 'quantity'), ('range', 'range')], max_length=100)),
                ('valueBoolean', models.BooleanField()),
                ('exclude', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='GroupCharacteristicCode',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='GroupCharacteristicValue',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='GroupCode',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='GroupIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Identifier')),
                ('group', models.ManyToManyField(to='fhir.Group')),
            ],
            bases=('fhir.identifier',),
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inactive', models.BooleanField()),
                ('group', models.ManyToManyField(to='fhir.Group')),
                ('period', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period')),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceName', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('extraDetails', models.CharField(blank=True, max_length=100, null=True)),
                ('eligibilityNote', models.CharField(blank=True, max_length=100, null=True)),
                ('publicKey', models.CharField(blank=True, max_length=100, null=True)),
                ('appointmentRequired', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareServiceAvailableTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allDay', models.BooleanField()),
                ('availableStartTime', models.TimeField(blank=True)),
                ('availableEndTime', models.TimeField(blank=True)),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareServiceCharacteristic',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceCoverageArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareServiceEligibility',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Identifier')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
            bases=('fhir.identifier',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceNotAvailable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=1000)),
                ('during', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period')),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareServicePhoto',
            fields=[
                ('attachment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Attachment')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
            bases=('fhir.attachment',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceProgramName',
            fields=[
                ('fhirstring_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.FhirString')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
            bases=('fhir.fhirstring',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceReferralMethod',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceServiceCategory',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.ContactPoint')),
            ],
            bases=('fhir.contactpoint',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceServiceProvisionCode',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareServiceTelecom',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.ContactPoint')),
                ('healthcareService', models.ManyToManyField(to='fhir.HealthcareService')),
            ],
            bases=('fhir.contactpoint',),
        ),
        migrations.CreateModel(
            name='HealthcareServiceType',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('active', 'active'), ('suspended', 'suspended'), ('inactive', 'inactive')], max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, choices=[('active', 'active'), ('suspended', 'suspended'), ('inactive', 'inactive')], max_length=1000, null=True)),
                ('mode', models.CharField(blank=True, choices=[('instance', 'instance'), ('kind', 'kind')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Identifier')),
                ('location', models.ManyToManyField(to='fhir.Location')),
            ],
            bases=('fhir.identifier',),
        ),
        migrations.CreateModel(
            name='LocationPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.DecimalField(decimal_places=5, max_digits=20)),
                ('latitude', models.DecimalField(decimal_places=5, max_digits=20)),
                ('altitude', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('location', models.ManyToManyField(to='fhir.Location')),
            ],
        ),
        migrations.CreateModel(
            name='LocationTelecom',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.ContactPoint')),
                ('location', models.ManyToManyField(to='fhir.Location')),
            ],
            bases=('fhir.contactpoint',),
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('partOf', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAddress',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Address')),
                ('organization', models.ManyToManyField(to='fhir.Organization')),
            ],
            bases=('fhir.address',),
        ),
        migrations.CreateModel(
            name='OrganizationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationContactPurpose',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='OrganizationContactTelecom',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.ContactPoint')),
                ('organizationContact', models.ManyToManyField(to='fhir.OrganizationContact')),
            ],
            bases=('fhir.contactpoint',),
        ),
        migrations.CreateModel(
            name='OrganizationIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Identifier')),
                ('organization', models.ManyToManyField(to='fhir.Organization')),
            ],
            bases=('fhir.identifier',),
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('other', 'other'), ('unknown', 'unknown')], max_length=100, null=True)),
                ('birthDate', models.DateTimeField(blank=True)),
                ('deceasedType', models.CharField(blank=True, choices=[('boolean', 'boolean'), ('date_time', 'date_time')], max_length=100, null=True)),
                ('deceasedBoolean', models.NullBooleanField()),
                ('deceasedDateTime', models.DateTimeField(blank=True)),
                ('martialStatus', models.CharField(blank=True, max_length=100, null=True)),
                ('multipleBirth', models.BooleanField()),
                ('multipleBirthType', models.CharField(blank=True, max_length=100, null=True)),
                ('multipleBirthBoolean', models.NullBooleanField()),
                ('multipleBirthInteger', models.IntegerField(blank=True)),
                ('managingOrganization', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='PatientAddress',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Address')),
                ('patient', models.ManyToManyField(to='fhir.Patient')),
            ],
            bases=('fhir.address',),
        ),
        migrations.CreateModel(
            name='PatientAnimal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breed', models.ManyToManyField(blank=True, related_name='breed', to='fhir.AnimalBreed')),
            ],
        ),
        migrations.CreateModel(
            name='PatientCommunication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='PatientCommunicationLanguage',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='PatientContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female'), ('other', 'other'), ('unknown', 'unknown')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Identifier')),
                ('patient', models.ManyToManyField(to='fhir.Patient')),
            ],
            bases=('fhir.identifier',),
        ),
        migrations.CreateModel(
            name='PatientLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('replace', 'replace'), ('refer', 'refer'), ('seealso', 'seealso')], max_length=100)),
                ('other', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_patient', to='fhir.Patient')),
                ('patient', models.ManyToManyField(related_name='primary_patient', to='fhir.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientName',
            fields=[
                ('humanname_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.HumanName')),
                ('patient', models.ManyToManyField(to='fhir.Patient')),
            ],
            bases=('fhir.humanname',),
        ),
        migrations.CreateModel(
            name='PatientPhoto',
            fields=[
                ('attachment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Attachment')),
                ('patient', models.ManyToManyField(to='fhir.Patient')),
            ],
            bases=('fhir.attachment',),
        ),
        migrations.CreateModel(
            name='PatientTelecom',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.ContactPoint')),
                ('patient', models.ManyToManyField(to='fhir.Patient')),
            ],
            bases=('fhir.contactpoint',),
        ),
        migrations.CreateModel(
            name='PractionRoleSpecialty',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='Practitioner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.NullBooleanField()),
                ('birthDate', models.DateTimeField(blank=True)),
                ('name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.HumanName')),
            ],
        ),
        migrations.CreateModel(
            name='PractitionerAddress',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Address')),
                ('practitioner', models.ManyToManyField(to='fhir.Practitioner')),
            ],
            bases=('fhir.address',),
        ),
        migrations.CreateModel(
            name='PractitionerCommunication',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
                ('practitioner', models.ManyToManyField(to='fhir.Practitioner')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='PractitionerIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Identifier')),
                ('practitioner', models.ManyToManyField(to='fhir.Practitioner')),
            ],
            bases=('fhir.identifier',),
        ),
        migrations.CreateModel(
            name='PractitionerPhoto',
            fields=[
                ('attachment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Attachment')),
                ('practitioner', models.ManyToManyField(to='fhir.Practitioner')),
            ],
            bases=('fhir.attachment',),
        ),
        migrations.CreateModel(
            name='PractitionerQualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PractitionerQualificationCode',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='PractitionerQualificationIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Identifier')),
                ('PractitionerQualification', models.ManyToManyField(to='fhir.PractitionerQualification')),
            ],
            bases=('fhir.identifier',),
        ),
        migrations.CreateModel(
            name='PractitionerRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('managingOrganization', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Organization')),
                ('period', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period')),
                ('practitioner', models.ManyToManyField(to='fhir.Practitioner')),
            ],
        ),
        migrations.CreateModel(
            name='PractitionerRoleHealthcareService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.HealthcareService')),
                ('practitionerRole', models.ManyToManyField(to='fhir.PractitionerRole')),
            ],
        ),
        migrations.CreateModel(
            name='PractitionerRoleLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Location')),
                ('practitionerRole', models.ManyToManyField(to='fhir.PractitionerRole')),
            ],
        ),
        migrations.CreateModel(
            name='PractitionerRoleType',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='PractitionerTelecom',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.ContactPoint')),
                ('practitioner', models.ManyToManyField(to='fhir.Practitioner')),
            ],
            bases=('fhir.contactpoint',),
        ),
        migrations.CreateModel(
            name='RelatedPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female'), ('other', 'other'), ('unknown', 'unknown')], max_length=100, null=True)),
                ('birthDate', models.DateTimeField(blank=True)),
                ('name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.HumanName')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Patient')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Period')),
            ],
        ),
        migrations.CreateModel(
            name='RelatedPersonAddress',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Address')),
                ('realtedPerson', models.ManyToManyField(to='fhir.RelatedPerson')),
            ],
            bases=('fhir.address',),
        ),
        migrations.CreateModel(
            name='RelatedPersonIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Identifier')),
                ('realtedPerson', models.ManyToManyField(to='fhir.RelatedPerson')),
            ],
            bases=('fhir.identifier',),
        ),
        migrations.CreateModel(
            name='RelatedPersonPhoto',
            fields=[
                ('attachment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.Attachment')),
                ('realtedPerson', models.ManyToManyField(to='fhir.RelatedPerson')),
            ],
            bases=('fhir.attachment',),
        ),
        migrations.CreateModel(
            name='RelatedPersonRelationship',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.CreateModel(
            name='RelatedPersonTelecom',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.ContactPoint')),
                ('realtedPerson', models.ManyToManyField(to='fhir.RelatedPerson')),
            ],
            bases=('fhir.contactpoint',),
        ),
        migrations.CreateModel(
            name='ServiceTypeSpecialty',
            fields=[
                ('codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fhir.CodeableConcept')),
                ('healthcareServiceServiceType', models.ManyToManyField(to='fhir.HealthcareServiceServiceType')),
            ],
            bases=('fhir.codeableconcept',),
        ),
        migrations.AddField(
            model_name='relatedperson',
            name='relationship',
            field=models.ManyToManyField(to='fhir.RelatedPersonRelationship'),
        ),
        migrations.AddField(
            model_name='practitionerrole',
            name='role',
            field=models.ManyToManyField(blank=True, to='fhir.PractitionerRoleType'),
        ),
        migrations.AddField(
            model_name='practitionerrole',
            name='specialty',
            field=models.ManyToManyField(blank=True, to='fhir.PractionRoleSpecialty'),
        ),
        migrations.AddField(
            model_name='practitionerqualification',
            name='code',
            field=models.ManyToManyField(blank=True, to='fhir.PractitionerQualificationCode'),
        ),
        migrations.AddField(
            model_name='practitionerqualification',
            name='identifier',
            field=models.ManyToManyField(blank=True, to='fhir.Identifier'),
        ),
        migrations.AddField(
            model_name='practitionerqualification',
            name='issuer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Organization'),
        ),
        migrations.AddField(
            model_name='practitionerqualification',
            name='period',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period'),
        ),
        migrations.AddField(
            model_name='practitionerqualification',
            name='practitioner',
            field=models.ManyToManyField(to='fhir.Practitioner'),
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='address',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Address'),
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='name',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.HumanName'),
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='organization',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Organization'),
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='patient',
            field=models.ManyToManyField(to='fhir.Patient'),
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='period',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period'),
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='telecom',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.ContactPoint'),
        ),
        migrations.AddField(
            model_name='patientcommunication',
            name='language',
            field=models.ManyToManyField(to='fhir.PatientCommunicationLanguage'),
        ),
        migrations.AddField(
            model_name='patientcommunication',
            name='patient',
            field=models.ManyToManyField(to='fhir.Patient'),
        ),
        migrations.AddField(
            model_name='patientanimal',
            name='genderStatus',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='gender_status', to='fhir.CodeableConcept'),
        ),
        migrations.AddField(
            model_name='patientanimal',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Patient'),
        ),
        migrations.AddField(
            model_name='patientanimal',
            name='species',
            field=models.ManyToManyField(to='fhir.AnimalSpecies'),
        ),
        migrations.AddField(
            model_name='organizationcontact',
            name='address',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Address'),
        ),
        migrations.AddField(
            model_name='organizationcontact',
            name='name',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.HumanName'),
        ),
        migrations.AddField(
            model_name='organizationcontact',
            name='organization',
            field=models.ManyToManyField(to='fhir.Organization'),
        ),
        migrations.AddField(
            model_name='organizationcontact',
            name='purpose',
            field=models.ManyToManyField(blank=True, to='fhir.CodeableConcept'),
        ),
        migrations.AddField(
            model_name='organization',
            name='type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.OrganizationType'),
        ),
        migrations.AddField(
            model_name='location',
            name='managingOrganization',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Organization'),
        ),
        migrations.AddField(
            model_name='location',
            name='partOf',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Location'),
        ),
        migrations.AddField(
            model_name='location',
            name='type',
            field=models.ManyToManyField(to='fhir.LocationType'),
        ),
        migrations.AddField(
            model_name='healthcareserviceservicetype',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.HealthcareServiceType'),
        ),
        migrations.AddField(
            model_name='healthcareservicecoveragearea',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Location'),
        ),
        migrations.AddField(
            model_name='healthcareservice',
            name='eligibility',
            field=models.ManyToManyField(blank=True, to='fhir.HealthcareServiceEligibility'),
        ),
        migrations.AddField(
            model_name='healthcareservice',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fhir.Location'),
        ),
        migrations.AddField(
            model_name='healthcareservice',
            name='providedBy',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Organization'),
        ),
        migrations.AddField(
            model_name='healthcareservice',
            name='serviceCategory',
            field=models.ManyToManyField(blank=True, to='fhir.HealthcareServiceServiceCategory'),
        ),
        migrations.AddField(
            model_name='groupcharacteristic',
            name='code',
            field=models.ManyToManyField(to='fhir.GroupCharacteristicCode'),
        ),
        migrations.AddField(
            model_name='groupcharacteristic',
            name='group',
            field=models.ManyToManyField(to='fhir.Group'),
        ),
        migrations.AddField(
            model_name='groupcharacteristic',
            name='period',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Period'),
        ),
        migrations.AddField(
            model_name='groupcharacteristic',
            name='valuesQuantity',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.Quantity'),
        ),
        migrations.AddField(
            model_name='group',
            name='code',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='fhir.GroupCode'),
        ),
        migrations.AddField(
            model_name='contacttelecom',
            name='patient',
            field=models.ManyToManyField(to='fhir.PatientContact'),
        ),
        migrations.AddField(
            model_name='contactrelationship',
            name='patient',
            field=models.ManyToManyField(to='fhir.PatientContact'),
        ),
        migrations.AddField(
            model_name='availabletimedaysofweek',
            name='availableTime',
            field=models.ManyToManyField(to='fhir.HealthcareServiceAvailableTime'),
        ),
    ]
